// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import pubsub "github.com/utilitywarehouse/go-pubsub"

// MessageSink is an autogenerated mock type for the MessageSink type
type MessageSink struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MessageSink) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PutMessage provides a mock function with given fields: _a0
func (_m *MessageSink) PutMessage(_a0 pubsub.ProducerMessage) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(pubsub.ProducerMessage) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Status provides a mock function with given fields:
func (_m *MessageSink) Status() (*pubsub.Status, error) {
	ret := _m.Called()

	var r0 *pubsub.Status
	if rf, ok := ret.Get(0).(func() *pubsub.Status); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pubsub.Status)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
